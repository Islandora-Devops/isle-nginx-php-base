#!/usr/bin/env bash

set -e

if [[ -n "${DEBUG}" ]]; then
  set -x
fi

# usage: file_env VAR [DEFAULT]
#    ie: file_env 'DB_PASSWORD' 'example'
# (will allow for "$DB_PASSWORD_FILE" to fill in the value of
#  "$DB_PASSWORD" from a file, especially for Docker's secrets feature)
file_env() {
  local var="$1"
  local fileVar="${var}_FILE"
  local def="${2:-}"
  if [[ "${!var:-}" ]] && [[ "${!fileVar:-}" ]]; then
    echo >&2 "error: both $var and $fileVar are set (but are exclusive)"
    exit 1
  fi
  local val="${def}"
  if [[ "${!var:-}" ]]; then
    val="${!var}"
  elif [[ "${!fileVar:-}" ]]; then
    val="$(< "${!fileVar}")"
  fi
  export "$var"="$val"
  unset "$fileVar"
}

if [[ -f "${APP_DOCROOT}/sites/default/settings.isle.php" ]]; then
  file_env "APP_NAME"
  file_env "APP_ACCOUNT_PASS"
  file_env "DB_NAME"
  file_env "DB_USER"
  file_env "DB_PASSWORD"
fi

# Make sure files folder is linked at the proper folder
/usr/local/bin/files_link "${APP_DOCROOT}/sites/default/files"

# set custom config files for the drupal .env where the credentials are.
/usr/local/bin/confd -onetime -backend env

# Delay container to start until the database server is ready.
/usr/local/bin/wait_for_database

# Attempt to install drupal.
if [[ "${AUTO_INSTALL}" == "true" ]]; then
 /usr/local/bin/install_drupal
fi

exec "$@"
